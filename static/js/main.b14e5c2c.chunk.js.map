{"version":3,"sources":["components/NewsArticle/NewsArticle.js","components/NewsContainer/NewsContainer.js","components/Menu/Menu.js","components/SearchForm/SearchForm.js","components/App/App.js","index.js"],"names":["NewsArticle","id","headline","img","description","url","data-id","src","alt","href","NewsContainer","props","articles","selected","map","article","key","className","length","onClick","refresh","Menu","filterNewsType","event","setState","target","name","handleChange","selectNewsType","styleButton","newsType","state","createButton","displayName","this","React","Component","SearchForm","searchText","value","handleClick","submitSearch","toLowerCase","clearInputs","render","type","onChange","placeholder","App","handleApiData","data","local","entertainment","health","science","technology","reloadAllArticles","window","location","reload","search","input","matching","filter","includes","fetch","then","response","json","propsSelected","ReactDOM","document","getElementById"],"mappings":"yVAeeA,G,YAXK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,IAClD,OACI,6BAASC,UAASL,GACd,4BAAKC,GACL,yBAAKK,IAAKJ,EAAKK,IAAI,iBACnB,2BAAIJ,GACJ,uBAAGK,KAAMJ,GAAT,sBCuBGK,EA5BO,SAACC,GAEnB,IAAMC,EAAWD,EAAME,SAASC,KAAI,SAAAC,GAChC,OACI,kBAAC,EAAD,eACAC,IAAKD,EAAQb,UACTa,OAcZ,OACI,6BAASE,UAAU,kBACdL,GAVED,EAAME,SAASK,QAClB,6BACI,gEACA,4BAAQC,QAASR,EAAMS,SAAvB,2BC4BDC,G,wDA3CX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAMVW,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACX,SAAUU,EAAME,OAAOC,OACtC,EAAKC,aAAaJ,EAAME,OAAOC,OAThB,EAYnBC,aAAe,SAACD,GACZ,EAAKf,MAAMiB,eAAeF,IAbX,EAgBnBG,YAAc,SAACC,GACX,OAAO,EAAKC,MAAMlB,WAAaiB,EAAW,WAAa,cAjBxC,EAqBnBE,aAAe,SAACN,EAAMO,GAClB,OAAQ,4BACJhB,UAAW,EAAKY,YAAYH,GAC5BP,QAAS,EAAKG,eACdI,KAAMA,GACLO,IAxBL,EAAKF,MAAQ,CACTlB,SAAU,IAHC,E,qDA8Bf,OACI,6BACKqB,KAAKF,aAAa,QAAS,cAC3BE,KAAKF,aAAa,aAAc,cAChCE,KAAKF,aAAa,gBAAiB,iBACnCE,KAAKF,aAAa,UAAW,WAC7BE,KAAKF,aAAa,SAAU,e,GArC1BG,IAAMC,YCwCVC,G,wDAvCX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IAMVgB,aAAe,SAACJ,GACZ,EAAKC,SAAS,CAACc,WAAYf,EAAME,OAAOc,SARzB,EAWnBC,YAAc,WACV,EAAK7B,MAAM8B,aAAa,EAAKV,MAAMO,WAAWI,eAC9C,EAAKC,eAbU,EAgBnBA,YAAc,WACV,EAAKnB,SAAS,CAACc,WAAY,MAjBZ,EAoBnBM,OAAS,WACL,OACI,6BAAS3B,UAAU,eACf,0CACA,2BACI4B,KAAK,OACLnB,KAAK,aACLa,MAAO,EAAKR,MAAMO,WAClBQ,SAAU,EAAKnB,aACfoB,YAAY,oBAGhB,4BAAQ5B,QAAS,EAAKqB,aAAtB,UACA,4BAAQrB,QAAS,EAAKR,MAAMS,SAA5B,WA/BR,EAAKW,MAAQ,CACTO,WAAY,IAHD,E,UADEH,IAAMC,YCiEhBY,G,wDAtDb,aAAe,IAAD,8BACZ,gBAwBFC,cAAgB,SAAAC,GACd,EAAK1B,SAAS,CAAC2B,MAAOD,EAAKC,MAAOC,cAAeF,EAAKE,cAAeC,OAAQH,EAAKG,OAAQC,QAASJ,EAAKI,QAASC,WAAYL,EAAKK,aAClI,EAAK/B,SAAS,CAACX,SAAS,GAAD,mBAAMqC,EAAKC,OAAX,YAAqBD,EAAKE,eAA1B,YAA4CF,EAAKG,QAAjD,YAA4DH,EAAKI,SAAjE,YAA6EJ,EAAKK,gBA3B7F,EA8BdjC,eAAiB,SAAAQ,GACf,EAAKN,SAAS,CAACX,SAAU,EAAKkB,MAAMD,MA/BxB,EAkCd0B,kBAAoB,WAClBC,OAAOC,SAASC,UAnCJ,EAsCdC,OAAS,SAACC,GACR,IAAMC,EAAW,EAAK/B,MAAMlB,SAASkD,QAAO,SAAAhD,GAAO,OAAIA,EAAQX,YAAYsC,cAAcsB,SAASH,IAAU9C,EAAQb,SAASwC,cAAcsB,SAASH,MACpJ,EAAKrC,SAAS,CAACX,SAAUiD,KAtCzB,EAAK/B,MAAQ,CACXoB,MAAO,GACPC,cAAe,GACfC,OAAQ,GACRC,QAAS,GACTC,WAAY,GACZ1C,SAAU,IARA,E,gEAmBO,IAAD,OAClBoD,MAAM,mDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAhB,GAAI,OAAI,EAAKD,cAAcC,Q,+BAsBnC,OACE,yBAAKjC,UAAU,OACb,kBAAC,EAAD,CAAYwB,aAAcP,KAAK0B,OAAQxC,QAASc,KAAKsB,oBACrD,kBAAC,EAAD,CAAM5B,eAAgBM,KAAKZ,eAAgB+C,cAAenC,KAAKH,MAAMlB,WACrE,kBAAC,EAAD,CAAeA,SAAUqB,KAAKH,MAAMlB,SAAUO,QAASc,KAAKsB,yB,GAjDlDpB,cCTlBkC,IAAS1B,OAAO,kBAAC,EAAD,MAAS2B,SAASC,eAAe,W","file":"static/js/main.b14e5c2c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport './NewsArticle.css';\n\nconst NewsArticle = ({id, headline, img, description, url}) => {\n    return(\n        <article data-id={id}>\n            <h3>{headline}</h3>\n            <img src={img} alt='news article'/>\n            <p>{description}</p>\n            <a href={url}>Link to article</a>\n        </article>\n    )\n}\n\nexport default NewsArticle;\n\nNewsArticle.propTypes = {\n    id: PropTypes.number,\n    headline: PropTypes.string,\n    img: PropTypes.string,\n    description: PropTypes.string,\n    url: PropTypes.string\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './NewsContainer.css'\nimport NewsArticle from '../NewsArticle/NewsArticle'\n\nconst NewsContainer = (props) => {\n\n    const articles = props.selected.map(article => {\n        return(\n            <NewsArticle \n            key={article.headline} \n            {...article}\n            />\n        )\n    })\n\n    const noArticlesMessage = () => {\n       return !props.selected.length && (\n            <div>\n                <h2>No articles match your search...</h2>\n                <button onClick={props.refresh}>Back to All Articles</button>\n            </div>\n        )\n    } \n\n    return(\n        <section className='news-container'>\n            {articles}\n            {noArticlesMessage()}\n        </section>\n    )\n}\n\nexport default NewsContainer;\n\nNewsContainer.propTypes = {\n    selected: PropTypes.array\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './Menu.css'\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selected: '',\n        }\n    }\n    \n    filterNewsType = (event) => {\n        this.setState({selected: event.target.name})\n        this.handleChange(event.target.name)\n    }\n\n    handleChange = (name) => {\n        this.props.selectNewsType(name)\n    }\n\n    styleButton = (newsType) => {\n        return this.state.selected === newsType ? 'selected' : 'unselected' \n    }\n\n    // is this cool? originally just had 5 seperate buttons in the render return but this seems cleaner??\n    createButton = (name, displayName) => {\n        return (<button \n            className={this.styleButton(name)}\n            onClick={this.filterNewsType} \n            name={name}>\n            {displayName}</button>)\n    }\n\n    render() {\n        return (\n            <nav>\n                {this.createButton('local', 'Local News')}\n                {this.createButton('technology', 'Technology')}\n                {this.createButton('entertainment', 'Entertainment')}\n                {this.createButton('science', 'Science')}\n                {this.createButton('health', 'Health')}\n            </nav>\n        )\n    }\n\n}\n\nexport default Menu;\n\nMenu.propTypes = {\n    selectNewsType: PropTypes.func,\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './SearchForm.css';\n\nclass SearchForm extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            searchText: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({searchText: event.target.value})\n    }\n\n    handleClick = () => {\n        this.props.submitSearch(this.state.searchText.toLowerCase())\n        this.clearInputs()\n    }\n\n    clearInputs = () => {\n        this.setState({searchText: ''})\n    }\n\n    render = () => {\n        return(\n            <section className='search-form'>\n                <h1>What's New</h1>\n                <input\n                    type='text'\n                    name='searchText'\n                    value={this.state.searchText}\n                    onChange={this.handleChange}\n                    placeholder='search articles'\n                />\n                \n                <button onClick={this.handleClick}>SEARCH</button>\n                <button onClick={this.props.refresh}>CLEAR</button>\n            </section>\n        )\n    }\n}\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n    submitSearch: PropTypes.func,\n    refresh: PropTypes.func\n}","import React, { Component } from 'react';\n\n// import local from '../../data/local';\n// import entertainment from '../../data/entertainment';\n// import health from '../../data/health';\n// import science from '../../data/science';\n// import technology from '../../data/technology';\n\nimport NewsContainer from '../NewsContainer/NewsContainer'\nimport Menu from '../Menu/Menu'\nimport SearchForm from '../SearchForm/SearchForm'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      local: [],\n      entertainment: [],\n      health: [],\n      science: [],\n      technology: [],\n      selected: []\n  // I left how I originally had state set up before fetching from the API for feedback purposes...\n  //     local,\n  //     entertainment,\n  //     health,\n  //     science,\n  //     technology,\n  //     selected: [...local, ...entertainment, ...health, ...science, ...technology]\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://whats-new-api.herokuapp.com/api/v1/news')\n      .then(response => response.json())\n      .then(data => this.handleApiData(data))\n  }\n\n  handleApiData = data => {\n    this.setState({local: data.local, entertainment: data.entertainment, health: data.health, science: data.science, technology: data.technology})\n    this.setState({selected: [...data.local, ...data.entertainment, ...data.health, ...data.science, ...data.technology]})\n  }\n\n  filterNewsType = newsType => {\n    this.setState({selected: this.state[newsType]})\n  }\n\n  reloadAllArticles = () => {\n    window.location.reload()\n  }\n\n  search = (input) => {\n    const matching = this.state.selected.filter(article => article.description.toLowerCase().includes(input) || article.headline.toLowerCase().includes(input))\n    this.setState({selected: matching})\n  }\n \n  render () {\n    return (\n      <div className=\"app\">\n        <SearchForm submitSearch={this.search} refresh={this.reloadAllArticles}/>\n        <Menu selectNewsType={this.filterNewsType} propsSelected={this.state.selected} /> \n        <NewsContainer selected={this.state.selected} refresh={this.reloadAllArticles}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}